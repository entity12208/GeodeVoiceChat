name: Create Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: lukka/get-cmake@v3.30.1
        with:
          cmake-version: '3.26.4'  # Adjust CMake version if needed

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Fetch tags
        run: git fetch --tags

      - name: Determine the latest tag
        id: get_latest_tag
        run: |
          TAG=$(git tag --sort=-creatordate | head -n 1)
          echo "LATEST_TAG=${TAG:-v0.0.0}" >> $GITHUB_ENV

      - name: Bump version
        id: bump_version
        run: |
          VERSION=$(echo "${LATEST_TAG#v}" | awk -F. -v OFS=. '{$NF++;print}')
          if [ -z "$VERSION" ]; then
            VERSION="1.0.0"
          fi
          echo "NEW_TAG=v$VERSION" >> $GITHUB_ENV

      - name: Prepare build directory
        run: mkdir -p build

      - name: Zip project files
        run: |
          zip -r build/GeodeVoiceChat-${{ env.NEW_TAG }}.geode . -x '.git/*' -x '.github/*' -x 'build/*'
        env:
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Create new tag
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: |
            Release notes for ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload GeodeVoiceChat.geode file
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/GeodeVoiceChat-${{ env.NEW_TAG }}.geode
          asset_name: GeodeVoiceChat-${{ env.NEW_TAG }}.geode
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
